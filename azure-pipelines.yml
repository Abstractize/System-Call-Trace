resources:
  repositories:
  - repository: self
    type: git
    ref: master
jobs:
- job: Job_1
  displayName: Quality
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
  - task: Bash@3
    displayName: Get Build Wrapper
    inputs:
      targetType: inline
      script: >-
        curl '<sonarqube_url>/static/cpp/build-wrapper-linux-x86.zip' --output build-wrapper.zip

        unzip build-wrapper.zip
  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: Prepare analysis on SonarCloud
    inputs:
      SonarCloud: gabosonar
      organization: abstractize
      scannerMode: CLI

  - task: Bash@3
    displayName: Bash Script
    inputs:
      targetType: inline
      script: >
        build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir /build/ cmake
  - task: SonarCloudAnalyze@1
    displayName: Run Code Analysis
  - task: SonarCloudPublish@1
    displayName: Publish Quality Gate Result
- job: Job_2
  displayName: Build
  pool:
    vmImage: ubuntu-20.04
  steps:
  - checkout: self
    clean: true
  - task: CMake@1
    displayName: CMake  Dir
    inputs:
      cwd: ''
      cmakeArgs: .
  - task: CMake@1
    displayName: CMake Build
    inputs:
      cmakeArgs: --build ./
  - task: ArchiveFiles@2
    displayName: Archive All
    inputs:
      rootFolderOrFile: .
      includeRootFolder: false
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
...

